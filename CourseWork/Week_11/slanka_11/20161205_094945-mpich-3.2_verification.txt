#
# MPICH 3.2 (w/ gcc 4.8.5) verification

  mpicc   : /home/campus31/slanka/apps/mpich/3.2/gcc/4.8.5/bin/mpicc
  mpicxx  : /home/campus31/slanka/apps/mpich/3.2/gcc/4.8.5/bin/mpicxx
  mpif77  : /home/campus31/slanka/apps/mpich/3.2/gcc/4.8.5/bin/mpif77
  mpif90  : /home/campus31/slanka/apps/mpich/3.2/gcc/4.8.5/bin/mpif90
  mpiexec : /home/campus31/slanka/apps/mpich/3.2/gcc/4.8.5/bin/mpiexec
  mpirun  : /home/campus31/slanka/apps/mpich/3.2/gcc/4.8.5/bin/mpirun 

  mpichversion
  MPICH Version:    	3.2
MPICH Release date:	Wed Nov 11 22:06:48 CST 2015
MPICH Device:    	ch3:nemesis
MPICH configure: 	--prefix=/home/campus31/slanka/apps/mpich/3.2/gcc/4.8.5 CC=gcc CXX=g++ FC=gfortran F77=gfortran --enable-debuginfo --enable-g=dbg,mem,log --enable-shared
MPICH CC: 	gcc    -g -O2
MPICH CXX: 	g++   -g -O2
MPICH F77: 	gfortran   -g -O2
MPICH FC: 	gfortran   -g -O2

  mpivars
  71 MPI Control Variables
	MPIR_CVAR_DEBUG_HOLD            =0	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	If true, causes processes to wait in MPI_Init and MPI_Initthread for a debugger to be attached.  Once the debugger has attached, the variable 'hold' should be set to 0 in order to allow the process to continue (e.g., in gdb, "set hold=0").
	MPIR_CVAR_ERROR_CHECKING        =1	SCOPE_LOCAL	No-object	MPI_INT	VERBOSITY_USER_BASIC	If true, perform checks for errors, typically to verify valid inputs to MPI routines.  Only effective when MPICH is configured with --enable-error-checking=runtime .
	MPIR_CVAR_ASYNC_PROGRESS        =0	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	If set to true, MPICH will initiate an additional thread to make asynchronous progress on all communication operations including point-to-point, collective, one-sided operations and I/O.  Setting this variable will automatically increase the thread-safety level to MPI_THREAD_MULTIPLE.  While this improves the progress semantics, it might cause a small amount of performance overhead for regular MPI operations.  The user is encouraged to leave one or more hardware threads vacant in order to prevent contention between the application threads and the progress thread(s).  The impact of oversubscription is highly system dependent but may be substantial in some cases, hence this recommendation.
	MPIR_CVAR_DEFAULT_THREAD_LEVEL  =MPI_THREAD_SINGLE	SCOPE_ALL_EQ	No-object	MPI_CHAR	VERBOSITY_USER_BASIC	Sets the default thread level to use when using MPI_INIT.
	MPIR_CVAR_MEMDUMP               =1	SCOPE_LOCAL	No-object	MPI_INT	VERBOSITY_MPIDEV_DETAIL	If true, list any memory that was allocated by MPICH and that remains allocated when MPI_Finalize completes.
	MPIR_CVAR_SUPPRESS_ABORT_MESSAGE=0	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	Disable printing of abort error message.
	MPIR_CVAR_REDUCE_SHORT_MSG_SIZE =2048	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	the short message algorithm will be used if the send buffer size is <= this value (in bytes)
	MPIR_CVAR_ENABLE_SMP_REDUCE     =1	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	Enable SMP aware reduce.
	MPIR_CVAR_MAX_SMP_REDUCE_MSG_SIZE=0	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	Maximum message size for which SMP-aware reduce is used.  A value of '0' uses SMP-aware reduce for all message sizes.
	MPIR_CVAR_REDSCAT_COMMUTATIVE_LONG_MSG_SIZE=524288	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	the long message algorithm will be used if the operation is commutative and the send buffer size is >= this value (in bytes)
	MPIR_CVAR_BCAST_MIN_PROCS       =8	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	Let's define short messages as messages with size < MPIR_CVAR_BCAST_SHORT_MSG_SIZE, and medium messages as messages with size >= MPIR_CVAR_BCAST_SHORT_MSG_SIZE but < MPIR_CVAR_BCAST_LONG_MSG_SIZE, and long messages as messages with size >= MPIR_CVAR_BCAST_LONG_MSG_SIZE. The broadcast algorithms selection procedure is as follows. For short messages or when the number of processes is < MPIR_CVAR_BCAST_MIN_PROCS, we do broadcast using the binomial tree algorithm. Otherwise, for medium messages and with a power-of-two number of processes, we do broadcast based on a scatter followed by a recursive doubling allgather algorithm. Otherwise, for long messages or with non power-of-two number of processes, we do broadcast based on a scatter followed by a ring allgather algorithm. (See also: MPIR_CVAR_BCAST_SHORT_MSG_SIZE, MPIR_CVAR_BCAST_LONG_MSG_SIZE)
	MPIR_CVAR_BCAST_SHORT_MSG_SIZE  =12288	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	Let's define short messages as messages with size < MPIR_CVAR_BCAST_SHORT_MSG_SIZE, and medium messages as messages with size >= MPIR_CVAR_BCAST_SHORT_MSG_SIZE but < MPIR_CVAR_BCAST_LONG_MSG_SIZE, and long messages as messages with size >= MPIR_CVAR_BCAST_LONG_MSG_SIZE. The broadcast algorithms selection procedure is as follows. For short messages or when the number of processes is < MPIR_CVAR_BCAST_MIN_PROCS, we do broadcast using the binomial tree algorithm. Otherwise, for medium messages and with a power-of-two number of processes, we do broadcast based on a scatter followed by a recursive doubling allgather algorithm. Otherwise, for long messages or with non power-of-two number of processes, we do broadcast based on a scatter followed by a ring allgather algorithm. (See also: MPIR_CVAR_BCAST_MIN_PROCS, MPIR_CVAR_BCAST_LONG_MSG_SIZE)
	MPIR_CVAR_BCAST_LONG_MSG_SIZE   =524288	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	Let's define short messages as messages with size < MPIR_CVAR_BCAST_SHORT_MSG_SIZE, and medium messages as messages with size >= MPIR_CVAR_BCAST_SHORT_MSG_SIZE but < MPIR_CVAR_BCAST_LONG_MSG_SIZE, and long messages as messages with size >= MPIR_CVAR_BCAST_LONG_MSG_SIZE. The broadcast algorithms selection procedure is as follows. For short messages or when the number of processes is < MPIR_CVAR_BCAST_MIN_PROCS, we do broadcast using the binomial tree algorithm. Otherwise, for medium messages and with a power-of-two number of processes, we do broadcast based on a scatter followed by a recursive doubling allgather algorithm. Otherwise, for long messages or with non power-of-two number of processes, we do broadcast based on a scatter followed by a ring allgather algorithm. (See also: MPIR_CVAR_BCAST_MIN_PROCS, MPIR_CVAR_BCAST_SHORT_MSG_SIZE)
	MPIR_CVAR_ENABLE_SMP_BCAST      =1	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	Enable SMP aware broadcast (See also: MPIR_CVAR_MAX_SMP_BCAST_MSG_SIZE)
	MPIR_CVAR_MAX_SMP_BCAST_MSG_SIZE=0	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	Maximum message size for which SMP-aware broadcast is used.  A value of '0' uses SMP-aware broadcast for all message sizes. (See also: MPIR_CVAR_ENABLE_SMP_BCAST)
	MPIR_CVAR_GATHERV_INTER_SSEND_MIN_PROCS=32	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	Use Ssend (synchronous send) for intercommunicator MPI_Gatherv if the "group B" size is >= this value.  Specifying "-1" always avoids using Ssend.  For backwards compatibility, specifying "0" uses the default value.
	MPIR_CVAR_ALLREDUCE_SHORT_MSG_SIZE=2048	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	the short message algorithm will be used if the send buffer size is <= this value (in bytes)
	MPIR_CVAR_ENABLE_SMP_COLLECTIVES=1	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	Enable SMP aware collective communication.
	MPIR_CVAR_ENABLE_SMP_ALLREDUCE  =1	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	Enable SMP aware allreduce.
	MPIR_CVAR_MAX_SMP_ALLREDUCE_MSG_SIZE=0	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	Maximum message size for which SMP-aware allreduce is used.  A value of '0' uses SMP-aware allreduce for all message sizes.
	MPIR_CVAR_GATHER_VSMALL_MSG_SIZE=1024	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	use a temporary buffer for intracommunicator MPI_Gather if the send buffer size is < this value (in bytes) (See also: MPIR_CVAR_GATHER_INTER_SHORT_MSG_SIZE)
	MPIR_CVAR_GATHER_INTER_SHORT_MSG_SIZE=2048	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	use the short message algorithm for intercommunicator MPI_Gather if the send buffer size is < this value (in bytes) (See also: MPIR_CVAR_GATHER_VSMALL_MSG_SIZE)
	MPIR_CVAR_ENABLE_SMP_BARRIER    =1	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	Enable SMP aware barrier.
	MPIR_CVAR_ALLGATHER_SHORT_MSG_SIZE=81920	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	For MPI_Allgather and MPI_Allgatherv, the short message algorithm will be used if the send buffer size is < this value (in bytes). (See also: MPIR_CVAR_ALLGATHER_LONG_MSG_SIZE)
	MPIR_CVAR_ALLGATHER_LONG_MSG_SIZE=524288	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	For MPI_Allgather and MPI_Allgatherv, the long message algorithm will be used if the send buffer size is >= this value (in bytes) (See also: MPIR_CVAR_ALLGATHER_SHORT_MSG_SIZE)
	MPIR_CVAR_ALLTOALL_SHORT_MSG_SIZE=256	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	the short message algorithm will be used if the per-destination message size (sendcount*size(sendtype)) is <= this value (See also: MPIR_CVAR_ALLTOALL_MEDIUM_MSG_SIZE)
	MPIR_CVAR_ALLTOALL_MEDIUM_MSG_SIZE=32768	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	the medium message algorithm will be used if the per-destination message size (sendcount*size(sendtype)) is <= this value and larger than MPIR_CVAR_ALLTOALL_SHORT_MSG_SIZE (See also: MPIR_CVAR_ALLTOALL_SHORT_MSG_SIZE)
	MPIR_CVAR_ALLTOALL_THROTTLE     =32	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	max no. of irecvs/isends posted at a time in some alltoall algorithms. Setting it to 0 causes all irecvs/isends to be posted at once
	MPIR_CVAR_SCATTER_INTER_SHORT_MSG_SIZE=2048	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	use the short message algorithm for intercommunicator MPI_Scatter if the send buffer size is < this value (in bytes)
	MPIR_CVAR_ALLGATHERV_PIPELINE_MSG_SIZE=32768	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	The smallest message size that will be used for the pipelined, large-message, ring algorithm in the MPI_Allgatherv implementation.
	MPIR_CVAR_CTXID_EAGER_SIZE      =2	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	The MPIR_CVAR_CTXID_EAGER_SIZE environment variable allows you to specify how many words in the context ID mask will be set aside for the eager allocation protocol.  If the application is running out of context IDs, reducing this value may help.
	MPIR_CVAR_COMM_SPLIT_USE_QSORT  =1	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	Use qsort(3) in the implementation of MPI_Comm_split instead of bubble sort.
	MPIR_CVAR_PROCTABLE_SIZE        =64	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	Size of the "MPIR" debugger interface proctable (process table).
	MPIR_CVAR_PROCTABLE_PRINT       =0	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	If true, dump the proctable entries at MPIR_WaitForDebugger-time.
	MPIR_CVAR_PRINT_ERROR_STACK     =1	SCOPE_LOCAL	No-object	MPI_INT	VERBOSITY_USER_BASIC	If true, print an error stack trace at error handling time.
	MPIR_CVAR_CHOP_ERROR_STACK      =0	SCOPE_LOCAL	No-object	MPI_INT	VERBOSITY_USER_BASIC	If >0, truncate error stack output lines this many characters wide.  If 0, do not truncate, and if <0 use a sensible default.
	MPIR_CVAR_NAMESERV_FILE_PUBDIR  =	SCOPE_ALL_EQ	No-object	MPI_CHAR	VERBOSITY_USER_BASIC	Sets the directory to use for MPI service publishing in the file nameserv implementation.  Allows the user to override where the publish and lookup information is placed for connect/accept based applications.
	MPIR_CVAR_ABORT_ON_LEAKED_HANDLES=0	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	If true, MPI will call MPI_Abort at MPI_Finalize if any MPI object handles have been leaked.  For example, if MPI_Comm_dup is called without calling a corresponding MPI_Comm_free.  For uninteresting reasons, enabling this option may prevent all known object leaks from being reported.  MPICH must have been configure with "--enable-g=handlealloc" or better in order for this functionality to work.
	MPIR_CVAR_COLL_ALIAS_CHECK      =1	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	Enable checking of aliasing in collective operations
	MPIR_CVAR_CH3_ENABLE_HCOLL      =0	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	If true, enable HCOLL collectives.
	MPIR_CVAR_CH3_NOLOCAL           =0	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	If true, force all processes to operate as though all processes are located on another node.  For example, this disables shared memory communication hierarchical collectives.
	MPIR_CVAR_CH3_ODD_EVEN_CLIQUES  =0	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	If true, odd procs on a node are seen as local to each other, and even procs on a node are seen as local to each other.  Used for debugging on a single machine.
	MPIR_CVAR_CH3_EAGER_MAX_MSG_SIZE=131072	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	This cvar controls the message size at which CH3 switches from eager to rendezvous mode.
	MPIR_CVAR_CH3_RMA_SLOTS_SIZE    =262144	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	Number of RMA slots during window creation. Each slot contains a linked list of target elements. The distribution of ranks among slots follows a round-robin pattern. Requires a positive value.
	MPIR_CVAR_CH3_RMA_TARGET_LOCK_DATA_BYTES=655360	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	Size (in bytes) of available lock data this window can provided. If current buffered lock data is more than this value, the process will drop the upcoming operation data. Requires a positive calue.
	MPIR_CVAR_CH3_RMA_OP_PIGGYBACK_LOCK_DATA_SIZE=65536	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	Specify the threshold of data size of a RMA operation which can be piggybacked with a LOCK message. It is always a positive value and should not be smaller than MPIDI_RMA_IMMED_BYTES. If user sets it as a small value, for middle and large data size, we will lose performance because of always waiting for round-trip of LOCK synchronization; if user sets it as a large value, we need to consume more memory on target side to buffer this lock request when lock is not satisfied.
	MPIR_CVAR_CH3_RMA_SCALABLE_FENCE_PROCESS_NUM=1024	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	Specify the threshold of switching the algorithm used in FENCE from the basic algorithm to the scalable algorithm. The value can be nagative, zero or positive. When the number of processes is larger than or equal to this value, FENCE will use a scalable algorithm which do not use O(P) data structure; when the number of processes is smaller than the value, FENCE will use a basic but fast algorithm which requires an O(P) data structure.
	MPIR_CVAR_CH3_RMA_DELAY_ISSUING_FOR_PIGGYBACKING=0	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	Specify if delay issuing of RMA operations for piggybacking LOCK/UNLOCK/FLUSH is enabled. It can be either 0 or 1. When it is set to 1, the issuing of LOCK message is delayed until origin process see the first RMA operation and piggyback LOCK with that operation, and the origin process always keeps the current last operation until the ending synchronization call in order to piggyback UNLOCK/FLUSH with that operation. When it is set to 0, in WIN_LOCK/UNLOCK case, the LOCK message is sent out as early as possible, in WIN_LOCK_ALL/UNLOCK_ALL case, the origin process still tries to piggyback LOCK message with the first operation; for UNLOCK/FLUSH message, the origin process no longer keeps the current last operation but only piggyback UNLOCK/FLUSH if there is an operation avaliable in the ending synchronization call.
	MPIR_CVAR_CH3_RMA_ACTIVE_REQ_THRESHOLD=65536	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	Threshold of number of active requests to trigger blocking waiting in operation routines. When the value is negative, we never blockingly wait in operation routines. When the value is zero, we always trigger blocking waiting in operation routines to wait until no. of active requests becomes zero. When the value is positive, we do blocking waiting in operation routines to wait until no. of active requests being reduced to this value.
	MPIR_CVAR_CH3_RMA_POKE_PROGRESS_REQ_THRESHOLD=128	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	Threshold at which the RMA implementation attempts to complete requests while completing RMA operations and while using the lazy synchonization approach.  Change this value if programs fail because they run out of requests or other internal resources
	MPIR_CVAR_CH3_RMA_OP_WIN_POOL_SIZE=256	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	Size of the window-private RMA operations pool (in number of operations) that stores information about RMA operations that could not be issued immediately.  Requires a positive value.
	MPIR_CVAR_CH3_RMA_OP_GLOBAL_POOL_SIZE=16384	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	Size of the Global RMA operations pool (in number of operations) that stores information about RMA operations that could not be issued immediatly.  Requires a positive value.
	MPIR_CVAR_CH3_RMA_TARGET_WIN_POOL_SIZE=256	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	Size of the window-private RMA target pool (in number of targets) that stores information about RMA targets that could not be issued immediately.  Requires a positive value.
	MPIR_CVAR_CH3_RMA_TARGET_GLOBAL_POOL_SIZE=16384	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	Size of the Global RMA targets pool (in number of targets) that stores information about RMA targets that could not be issued immediatly.  Requires a positive value.
	MPIR_CVAR_CH3_RMA_TARGET_LOCK_ENTRY_WIN_POOL_SIZE=256	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	Size of the window-private RMA lock entries pool (in number of lock entries) that stores information about RMA lock requests that could not be satisfied immediatly.  Requires a positive value.
	MPIR_CVAR_ENABLE_FT             =0	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	Enable fault tolerance functions
	MPIR_CVAR_NEMESIS_SHM_EAGER_MAX_SZ=-1	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	This cvar controls the message size at which Nemesis switches from eager to rendezvous mode for shared memory. If this cvar is set to -1, then Nemesis will choose an appropriate value.
	MPIR_CVAR_NEMESIS_SHM_READY_EAGER_MAX_SZ=-2	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	This cvar controls the message size at which Nemesis switches from eager to rendezvous mode for ready-send messages.  If this cvar is set to -1, then ready messages will always be sent eagerly.  If this cvar is set to -2, then Nemesis will choose an appropriate value.
	MPIR_CVAR_NEMESIS_ENABLE_CKPOINT=0	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	If true, enables checkpointing support and returns an error if checkpointing library cannot be initialized.
	MPIR_CVAR_NEMESIS_NETMOD        =	SCOPE_ALL_EQ	No-object	MPI_CHAR	VERBOSITY_USER_BASIC	If non-empty, this cvar specifies which network module should be used for communication.
	MPIR_CVAR_NEMESIS_LMT_DMA_THRESHOLD=2097152	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	Messages larger than this size will use the "dma" (knem) intranode LMT implementation, if it is enabled and available.
	MPIR_CVAR_POLLS_BEFORE_YIELD    =1000	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	When MPICH is in a busy waiting loop, it will periodically call a function to yield the processor.  This cvar sets the number of loops before the yield function is called.  A value of 0 disables yielding.
	MPIR_CVAR_OFI_USE_PROVIDER      =	SCOPE_LOCAL	No-object	MPI_CHAR	VERBOSITY_MPIDEV_DETAIL	If non-null, choose an OFI provider by name
	MPIR_CVAR_OFI_DUMP_PROVIDERS    =0	SCOPE_LOCAL	No-object	MPI_INT	VERBOSITY_MPIDEV_DETAIL	If true, dump provider information at init
	MPIR_CVAR_CH3_INTERFACE_HOSTNAME=	SCOPE_LOCAL	No-object	MPI_CHAR	VERBOSITY_USER_BASIC	If non-NULL, this cvar specifies the IP address that other processes should use when connecting to this process. This cvar is mutually exclusive with the MPIR_CVAR_CH3_NETWORK_IFACE cvar and it is an error to set them both.
	MPIR_CVAR_CH3_PORT_RANGE        	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	The MPIR_CVAR_CH3_PORT_RANGE environment variable allows you to specify the range of TCP ports to be used by the process manager and the MPICH library. The format of this variable is <low>:<high>.  To specify any available port, use 0:0.
	MPIR_CVAR_NEMESIS_TCP_NETWORK_IFACE=	SCOPE_ALL_EQ	No-object	MPI_CHAR	VERBOSITY_USER_BASIC	If non-NULL, this cvar specifies which pseudo-ethernet interface the tcp netmod should use (e.g., "eth1", "ib0"). Note, this is a Linux-specific cvar. This cvar is mutually exclusive with the MPIR_CVAR_CH3_INTERFACE_HOSTNAME cvar and it is an error to set them both.
	MPIR_CVAR_NEMESIS_TCP_HOST_LOOKUP_RETRIES=10	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	This cvar controls the number of times to retry the gethostbyname() function before giving up.
	MPIR_CVAR_NEMESIS_MXM_BULK_CONNECT=0	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	If true, force mxm to connect all processes at initialization time.
	MPIR_CVAR_NEMESIS_MXM_BULK_DISCONNECT=0	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	If true, force mxm to disconnect all processes at finalization time.
	MPIR_CVAR_NEMESIS_MXM_HUGEPAGE  =0	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC	If true, mxm tries detecting hugepage support.  On HPC-X 2.3 and earlier, this might cause problems on Ubuntu and other platforms even if the system provides hugepage support.

0 MPI Performance Variables

11 MPI_T categories
Category DEBUGGER has 3 control variables, 0 performance variables, and 0 subcategories
	Control Variables:
	MPIR_CVAR_DEBUG_HOLD            :	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_PROCTABLE_SIZE        :	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_PROCTABLE_PRINT       :	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
Category THREADS has 3 control variables, 0 performance variables, and 0 subcategories
	Control Variables:
	MPIR_CVAR_ASYNC_PROGRESS        :	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_DEFAULT_THREAD_LEVEL  :	SCOPE_ALL_EQ	No-object	MPI_CHAR	VERBOSITY_USER_BASIC
	MPIR_CVAR_CTXID_EAGER_SIZE      :	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
Category DEVELOPER has 3 control variables, 0 performance variables, and 0 subcategories
	Control Variables:
	MPIR_CVAR_MEMDUMP               :	SCOPE_LOCAL	No-object	MPI_INT	VERBOSITY_MPIDEV_DETAIL
	MPIR_CVAR_OFI_USE_PROVIDER      :	SCOPE_LOCAL	No-object	MPI_CHAR	VERBOSITY_MPIDEV_DETAIL
	MPIR_CVAR_OFI_DUMP_PROVIDERS    :	SCOPE_LOCAL	No-object	MPI_INT	VERBOSITY_MPIDEV_DETAIL
Category COLLECTIVE has 25 control variables, 0 performance variables, and 0 subcategories
	Control Variables:
	MPIR_CVAR_REDUCE_SHORT_MSG_SIZE :	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_ENABLE_SMP_REDUCE     :	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_MAX_SMP_REDUCE_MSG_SIZE:	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_REDSCAT_COMMUTATIVE_LONG_MSG_SIZE:	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_BCAST_MIN_PROCS       :	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_BCAST_SHORT_MSG_SIZE  :	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_BCAST_LONG_MSG_SIZE   :	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_ENABLE_SMP_BCAST      :	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_MAX_SMP_BCAST_MSG_SIZE:	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_GATHERV_INTER_SSEND_MIN_PROCS:	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_ALLREDUCE_SHORT_MSG_SIZE:	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_ENABLE_SMP_COLLECTIVES:	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_ENABLE_SMP_ALLREDUCE  :	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_MAX_SMP_ALLREDUCE_MSG_SIZE:	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_GATHER_VSMALL_MSG_SIZE:	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_GATHER_INTER_SHORT_MSG_SIZE:	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_ENABLE_SMP_BARRIER    :	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_ALLGATHER_SHORT_MSG_SIZE:	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_ALLGATHER_LONG_MSG_SIZE:	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_ALLTOALL_SHORT_MSG_SIZE:	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_ALLTOALL_MEDIUM_MSG_SIZE:	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_ALLTOALL_THROTTLE     :	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_SCATTER_INTER_SHORT_MSG_SIZE:	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_ALLGATHERV_PIPELINE_MSG_SIZE:	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_COLL_ALIAS_CHECK      :	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
Category COMMUNICATOR has 1 control variables, 0 performance variables, and 0 subcategories
	Control Variables:
	MPIR_CVAR_COMM_SPLIT_USE_QSORT  :	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
Category ERROR_HANDLING has 4 control variables, 0 performance variables, and 0 subcategories
	Control Variables:
	MPIR_CVAR_ERROR_CHECKING        :	SCOPE_LOCAL	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_SUPPRESS_ABORT_MESSAGE:	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_PRINT_ERROR_STACK     :	SCOPE_LOCAL	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_CHOP_ERROR_STACK      :	SCOPE_LOCAL	No-object	MPI_INT	VERBOSITY_USER_BASIC
Category PROCESS_MANAGER has 1 control variables, 0 performance variables, and 0 subcategories
	Control Variables:
	MPIR_CVAR_NAMESERV_FILE_PUBDIR  :	SCOPE_ALL_EQ	No-object	MPI_CHAR	VERBOSITY_USER_BASIC
Category MEMORY has 1 control variables, 0 performance variables, and 0 subcategories
	Control Variables:
	MPIR_CVAR_ABORT_ON_LEAKED_HANDLES:	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
Category CH3 has 21 control variables, 0 performance variables, and 0 subcategories
	Control Variables:
	MPIR_CVAR_CH3_ENABLE_HCOLL      :	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_CH3_NOLOCAL           :	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_CH3_ODD_EVEN_CLIQUES  :	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_CH3_EAGER_MAX_MSG_SIZE:	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_CH3_RMA_SLOTS_SIZE    :	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_CH3_RMA_TARGET_LOCK_DATA_BYTES:	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_CH3_RMA_OP_PIGGYBACK_LOCK_DATA_SIZE:	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_CH3_RMA_SCALABLE_FENCE_PROCESS_NUM:	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_CH3_RMA_DELAY_ISSUING_FOR_PIGGYBACKING:	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_CH3_RMA_ACTIVE_REQ_THRESHOLD:	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_CH3_RMA_POKE_PROGRESS_REQ_THRESHOLD:	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_CH3_RMA_OP_WIN_POOL_SIZE:	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_CH3_RMA_OP_GLOBAL_POOL_SIZE:	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_CH3_RMA_TARGET_WIN_POOL_SIZE:	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_CH3_RMA_TARGET_GLOBAL_POOL_SIZE:	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_CH3_RMA_TARGET_LOCK_ENTRY_WIN_POOL_SIZE:	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_CH3_INTERFACE_HOSTNAME:	SCOPE_LOCAL	No-object	MPI_CHAR	VERBOSITY_USER_BASIC
	MPIR_CVAR_CH3_PORT_RANGE        :	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_NEMESIS_MXM_BULK_CONNECT:	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_NEMESIS_MXM_BULK_DISCONNECT:	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_NEMESIS_MXM_HUGEPAGE  :	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
Category FT has 1 control variables, 0 performance variables, and 0 subcategories
	Control Variables:
	MPIR_CVAR_ENABLE_FT             :	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
Category NEMESIS has 8 control variables, 0 performance variables, and 0 subcategories
	Control Variables:
	MPIR_CVAR_NEMESIS_SHM_EAGER_MAX_SZ:	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_NEMESIS_SHM_READY_EAGER_MAX_SZ:	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_NEMESIS_ENABLE_CKPOINT:	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_NEMESIS_NETMOD        :	SCOPE_ALL_EQ	No-object	MPI_CHAR	VERBOSITY_USER_BASIC
	MPIR_CVAR_NEMESIS_LMT_DMA_THRESHOLD:	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_POLLS_BEFORE_YIELD    :	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC
	MPIR_CVAR_NEMESIS_TCP_NETWORK_IFACE:	SCOPE_ALL_EQ	No-object	MPI_CHAR	VERBOSITY_USER_BASIC
	MPIR_CVAR_NEMESIS_TCP_HOST_LOOKUP_RETRIES:	SCOPE_ALL_EQ	No-object	MPI_INT	VERBOSITY_USER_BASIC

